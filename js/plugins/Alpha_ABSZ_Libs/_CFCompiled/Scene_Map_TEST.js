// Generated by CoffeeScript 2.5.1
//╒═════════════════════════════════════════════════════════════════════════╛
// ■ Scene_Map.coffee
//╒═════════════════════════════════════════════════════════════════════════╛
//---------------------------------------------------------------------------
(function() {
  var ALIAS__onMapLoaded, ALIAS__stop, ALIAS__update, _;
  //@[DEFINES]
  _ = Scene_Map.prototype;
  //@[ALIAS]
  ALIAS__onMapLoaded = _.onMapLoaded;
  _.onMapLoaded1 = function() {
    var btn, icon, icon2, p, plBack, plFace, plName, rect, textRect;
    ALIAS__onMapLoaded.call(this);
    this.uiLayer = new Sprite();
    this.addChild(this.uiLayer);
    // * TEMP FOR SCREENSHOTS
    plBack = new AA.Sprite_UIImage();
    plBack.draw("c");
    plFace = new AA.Sprite_UIImage();
    plFace.draw("Actor1_1_0");
    plFace.move(670, 410);
    plBack.move(600, 520);
    this.changer = new AA.Changer(plFace);
    this.changer2 = new AA.Changer(plFace);
    "CHANGER".p();
    // * Движение вверх
    this.changer.change('y').from(plFace.y).to(plFace.y - 20).step(1).delay(60).speed(1).then(this.changer2).start();
    // * Затем затухание
    this.changer2.change('opacity').from(255).to(0).step(5).speed(1).delay(10).done(() => {
      this.changer = null;
      return this.changer2 = null;
    });
    p = AA.Sprite_UIText.prototype.defaultParams();
    p.size.w = 100;
    p.size.h = 30;
    p.font.face = "AABS_1";
    p.font.size = 24;
    p.textColor = "#FF8D1C".toCss();
    plName = new AA.Sprite_UIText(p);
    plName.move(634, 528);
    plName.draw("Reid");
    this.uiLayer.addChild(plFace);
    //@uiLayer.addChild plBack
    //@uiLayer.addChild plName

    // * END TEMP FOR SCREENSHOTS

    //TODO: Список дополнительных шрифтов?

    //s = new AA.Sprite_SelectedCircle()
    //@addChild s
    icon = new AA.Sprite_ActorStateIcon();
    icon.move(8, 8);
    this.uiLayer.addChild(icon);
    icon2 = new AA.Sprite_ActorStateIcon();
    icon2.move(46, 8);
    this.uiLayer.addChild(icon2);
    this.buffs = new AA.BuffIconsController([icon, icon2]);
    this.buffs.setup($gameParty.leader());
    btn = new AA.Sprite_UIButton();
    btn.move(700, 550);
    this.uiLayer.addChild(btn);
    $gameTemp._button = btn;
    rect = new AA.Sprite_UIRect();
    rect.fill("#000000".toCss(), 120);
    rect.move(10, 10);
    rect.drawBorder("#22fF00".toCss(), 2, 20);
    //@uiLayer.addChild rect
    textRect = new AA.Sprite_UITextWithBack();
    textRect.move(60, 60);
    textRect.draw("Hello");
    //@uiLayer.addChild textRect
    this._projectile = new Sprite(new Bitmap(40, 8));
    this._projectile.bitmap.fillAll(KDCore.Color.RED);
    this._projectile.anchor.set(0.5);
    this._projectile.move(100, 100);
    this._projectile.visible = false;
    //@_projectile.angle = 15
    this.addChild(this._projectile);
    this.flWindow = new AA.FloatingWindow(this, 220, 300);
    btn.button.addClickHandler(() => {
      return this.flWindow.open();
    });
  };
  //faceTest = new AA.Sprite_UIFace()
  //$gameTemp.fT = faceTest
  //@addChild faceTest
  _._startProjectile = function(x, y, x2, y2) {
    var p1, p2;
    this.proj = new AAMapProjectile();
    $gameTemp._proj = this.proj;
    p1 = new KDCore.Point(x, y);
    p2 = new KDCore.Point(x2, y2);
    return this.proj.start(p1, p2);
  };
  //@[ALIAS]
  ALIAS__update = _.update;
  _.update1 = function() {
    var ref, ref1;
    ALIAS__update.call(this);
    //if Input.isTriggered 'a'
    //    $gamePlayer.startAnimaXCustomAction('Attack', false, false)
    this.buffs.update();
    if ((ref = this.changer) != null) {
      ref.update();
    }
    if ((ref1 = this.proj) != null) {
      ref1.update();
    }
    if (this.proj != null) {
      this.proj.apply(this._projectile);
      this.proj.setEndPoint(TouchInput.toPoint().convertToMap());
      if (this.proj.isDisposed()) {
        return this.proj.dispose();
      }
    }
  };
  //@[ALIAS]
  ALIAS__stop = _.stop;
  _.stop1 = function() {
    this.uiLayer.visible = false;
    return ALIAS__stop.call(this);
  };
  _._testPopUp = function() {
    var char, data, item, popUpItem;
    popUpItem = new AA.Sprite_PopTreasureItem();
    data = [$dataWeapons, $dataArmors, $dataItems];
    item = data.sample().sample();
    while ((item == null) || !String.any(item.name) || item.iconIndex <= 0) {
      item = data.sample().sample();
    }
    popUpItem.setItem(item, KDCore.SDK.rand(1, 6));
    char = $gameMap.spriteset().findTargetSprite($gameMap.event(12));
    //char = $gamePlayer.AASprite()

    // * Если нету, создаём
    if (char.aaTreasurePopEngine == null) {
      char.aaTreasurePopEngine = new AA.PopTreasureController(char, null);
    // * Если есть, но закончился, то пересоздаём
    } else if (char.aaTreasurePopEngine.isEmtpy()) {
      char.aaTreasurePopEngine.stop();
      char.aaTreasurePopEngine = new AA.PopTreasureController(char, null);
    }
    char.aaTreasurePopEngine.addItem(popUpItem);
  };
})();

// ■ END Scene_Map.coffee
//---------------------------------------------------------------------------
window.StartProjectile = function(x, y) {
  var p, p2;
  p = $gamePlayer;
  //debugger
  p2 = TouchInput.toPoint().convertToMap();
  return SceneManager._scene._startProjectile(p.x, p.y, p2.x, p2.y);
};

window.testPopUp = function() {
  return SceneManager._scene._testPopUp();
};

//SceneManager._scene._testPopUp()
//SceneManager._scene._testPopUp()
//SceneManager._scene._testPopUp()
window.testPopUp2 = function() {
  SceneManager._scene._testPopUp();
  SceneManager._scene._testPopUp();
  return SceneManager._scene._testPopUp();
};
