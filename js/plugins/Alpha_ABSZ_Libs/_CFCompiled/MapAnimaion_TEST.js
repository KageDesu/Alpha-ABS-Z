// Generated by CoffeeScript 2.5.1
//╒═════════════════════════════════════════════════════════════════════════╛
// ■ Spriteset_Base.coffee
//╒═════════════════════════════════════════════════════════════════════════╛
//---------------------------------------------------------------------------
var Sprite_AnimationLoop;

(function() {
  var ALIAS__update, ALIAS__updateAnimations, _;
  //@[DEFINES]
  _ = Spriteset_Map.prototype;
  _.aaCreateLinkedAnimation = function() {
    var animation, sprite;
    if (this._linkSprite == null) {
      this._linkSprite = new Sprite();
      this._linkSprite.bitmap = new Bitmap(20, 20);
      //@_linkSprite.bitmap.fillAll()
      this.addChild(this._linkSprite);
      //@_linkSprite.move 100, 100
      this._linkSprite.x = $gamePlayer.screenX();
      this._linkSprite.y = $gamePlayer.screenY();
    } else {
      this._linkSprite.x = $gamePlayer.screenX();
      this._linkSprite.y = $gamePlayer.screenY();
    }
    sprite = new Sprite_AnimationLoop();
    sprite.targetObjects = [];
    animation = $dataAnimations[130];
    sprite.setup([this._linkSprite], animation, false, 0, null);
    this._effectsContainer.addChild(sprite);
    //@_animationSprites.push sprite
    this.__looped = sprite;
    $gameTemp._l = this.__looped;
  };
  //@[ALIAS]
  ALIAS__updateAnimations = _.updateAnimations;
  _.updateAnimations = function() {
    if (this.__looped != null) {
      if (!this.__looped.isPlaying()) {
        this.__looped.destroy();
        this._effectsContainer.removeChild(this.__looped);
        this.aaCreateLinkedAnimation();
      }
    }
    return ALIAS__updateAnimations.call(this);
  };
  //@[ALIAS]
  ALIAS__update = _.update;
  _.update = function() {
    return ALIAS__update.call(this);
  };
})();

// ■ END Spriteset_Base.coffee
//---------------------------------------------------------------------------
//@_linkSprite?.move TouchInput
//@_linkSprite?.y += 4
//if $gameTemp._proj?
//    $gameTemp._proj.apply(@_linkSprite)
//@__looped.setRotation(0, 0, $gameTemp._proj.getCurrentRotation())

  //TODO: animationShouldMirror - надо определять кто где находится?? - но это не для карты
Sprite_AnimationLoop = class Sprite_AnimationLoop extends Sprite_Animation {
  constructor() {
    super();
  }

  checkEnd() {
    return super.checkEnd();
  }

};

//if @_playing == false
//"RESTART".p()
//@_maxTimingFrames = 0
//@_frameIndex = 0
//@setup(@_targets, @_animation, @_mirror, @_delay, null)

//setup: (a,)
