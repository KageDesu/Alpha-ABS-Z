// Generated by CoffeeScript 2.5.1
//╒═════════════════════════════════════════════════════════════════════════╛
// ■ Game_Party.coffee
//╒═════════════════════════════════════════════════════════════════════════╛
//---------------------------------------------------------------------------
(function() {
  var _;
  //@[DEFINES]
  _ = Game_Party.prototype;
  //TODO: POP UP!

  //TODO: Pop Up по опыту: текст какой (через format), стиль, опция на ком: игрок, враг (прикреплён к экрану или к персонажу)

  // * Дать опыт всей группе (с учётом опций (разделение, для всех))
  // * isVisible == true -> Показать PopUp
  _.aaGainExpForParty = function(value, isVisible = true) {
    var e;
    try {
      //TODO: POP UP if isVisible = true
      console.log("EXP value " + value);
      //TODO: Пока что группы нету, реализацию оставлю на потом
      /*
      Опции:
      1) Только игрок
      2) Вся группа - одинаково
      3) Вся группа - разделить
      4) Кто убил
      */
      this.leader().gainExp(value);
    } catch (error) {
      e = error;
      AA.w(e);
    }
  };
  _.aaAddGainedItemToPanel = function(item, count) {
    if (!AA.Utils.isAAObject(item)) {
      return;
    }
    // * Новый предмет (т.е. раньше не было)
    if (this.numItems(item) === count) {
      // * Тут надо использовать idA
      if (!$gamePlayer.aaSkillsSet.isHaveItemOnPanel(item.idA)) {
        // * Тут используется обычный ID (так как конвертируется в методе)
        uAPI.setItemToPanel(item.id);
      }
    }
  };
  //TODO: Добавить ещё проверку флага, чтобы пропускать Notify, например когда с инвентаря снимаем вещь
  _.aaShowNotifyForItemGain = function(item, count) {
    var char, e, popUpItem;
    try {
      if (!KDCore.Utils.isSceneMap()) {
        return;
      }
      if (count <= 0) {
        return;
      }
      if (item == null) {
        return;
      }
      // * Специальный флаг, чтобы скрыть Notify
      // * Этот флаг использует Map Inventory (когда снимаешь предмет)
      if ($gameTemp.aaNotNeedItemPopUpNotify === true) {
        return;
      }
      popUpItem = new AA.Sprite_PopTreasureItem();
      popUpItem.setItem(item, count);
      char = $gamePlayer.AASprite();
      //TODO: Сделать проверку на предыидущий предмет, если сразу одинаковый, то х2
      //TODO: Звук какой-нибудь когда вещь поднимаешь!
      if (char == null) {
        return;
      }
      // * Если нету, создаём
      if (char.aaTreasurePopEngine == null) {
        return char.aaTreasurePopEngine = new AA.PopTreasureController(char, popUpItem);
      // * Если есть, но закончился, то пересоздаём
      } else if (char.aaTreasurePopEngine.isEmtpy()) {
        char.aaTreasurePopEngine.stop();
        return char.aaTreasurePopEngine = new AA.PopTreasureController(char, popUpItem); // * Добавляем
      } else {
        return char.aaTreasurePopEngine.addItem(popUpItem);
      }
    } catch (error) {
      e = error;
      return AA.w(e);
    }
  };
})();

// ■ END Game_Party.coffee
//---------------------------------------------------------------------------
